{"ast":null,"code":"const validators = (target, value) => {\n  let result = false;\n  switch (target) {\n    case \"name\":\n      value.length < 45 ? result = true : result = false;\n      break;\n    case \"dni\":\n      if (!isNaN(value) && value.length <= 8) result = true;else result = false;\n      break;\n    case \"phone\":\n      if (!isNaN(value) && value.length <= 9) result = true;else result = false;\n      if (value.length === 0) result = true;\n      break;\n    case \"email\":\n      const expresionRegular = /\\S+@\\S+\\.\\S+/;\n      if (expresionRegular.test(value)) result = true;else result = false;\n      break;\n    case \"instructions\":\n      value.length < 150 ? result = true : result = false;\n      break;\n    case \"address\":\n      value.length < 25 ? result = true : result = false;\n      break;\n    default:\n      break;\n  }\n  return result;\n};\nconst validatorsLevel2 = (setErrorsForm, currentForm) => {\n  let result = false;\n  for (let prop in currentForm) {\n    console.log(prop);\n    console.log(currentForm[prop]);\n  }\n  return result;\n};\nexport { validators, validatorsLevel2 };","map":{"version":3,"names":["validators","target","value","result","length","isNaN","expresionRegular","test","validatorsLevel2","setErrorsForm","currentForm","prop","console","log"],"sources":["C:/Users/Usuario/Desktop/TEX/client/src/views/Shopping/helpers_shopping/helpers_shopping.js"],"sourcesContent":["const validators = (target,value) =>{\r\n    let result = false;\r\n\r\n    switch (target) {\r\n        case \"name\":\r\n            value.length<45?result=true:result=false;\r\n            break;\r\n        case \"dni\":\r\n                if (!isNaN(value) && value.length<=8) result=true;\r\n                else result =false\r\n                break;     \r\n        case \"phone\":\r\n                if (!isNaN(value) && value.length<=9) result=true;\r\n                else result =false\r\n            if (value.length===0)result=true\r\n            break;      \r\n        case \"email\":\r\n            const expresionRegular = /\\S+@\\S+\\.\\S+/;\r\n            if (expresionRegular.test(value)) result = true;\r\n            else result = false\r\n\r\n            break;          \r\n        case \"instructions\":\r\n            value.length<150?result=true:result=false;\r\n            break;            \r\n                     \r\n        case \"address\":\r\n            value.length<25?result=true:result=false;\r\n            break;            \r\n             \r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\nconst validatorsLevel2 = (setErrorsForm, currentForm) =>{\r\n    let result = false;\r\n\r\n    for(let prop in currentForm){\r\n        console.log(prop);\r\n        console.log(currentForm[prop])\r\n    }\r\n\r\n\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\nexport{\r\n    validators,\r\n    validatorsLevel2\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,MAAM,EAACC,KAAK,KAAI;EAChC,IAAIC,MAAM,GAAG,KAAK;EAElB,QAAQF,MAAM;IACV,KAAK,MAAM;MACPC,KAAK,CAACE,MAAM,GAAC,EAAE,GAACD,MAAM,GAAC,IAAI,GAACA,MAAM,GAAC,KAAK;MACxC;IACJ,KAAK,KAAK;MACF,IAAI,CAACE,KAAK,CAACH,KAAK,CAAC,IAAIA,KAAK,CAACE,MAAM,IAAE,CAAC,EAAED,MAAM,GAAC,IAAI,CAAC,KAC7CA,MAAM,GAAE,KAAK;MAClB;IACR,KAAK,OAAO;MACJ,IAAI,CAACE,KAAK,CAACH,KAAK,CAAC,IAAIA,KAAK,CAACE,MAAM,IAAE,CAAC,EAAED,MAAM,GAAC,IAAI,CAAC,KAC7CA,MAAM,GAAE,KAAK;MACtB,IAAID,KAAK,CAACE,MAAM,KAAG,CAAC,EAACD,MAAM,GAAC,IAAI;MAChC;IACJ,KAAK,OAAO;MACR,MAAMG,gBAAgB,GAAG,cAAc;MACvC,IAAIA,gBAAgB,CAACC,IAAI,CAACL,KAAK,CAAC,EAAEC,MAAM,GAAG,IAAI,CAAC,KAC3CA,MAAM,GAAG,KAAK;MAEnB;IACJ,KAAK,cAAc;MACfD,KAAK,CAACE,MAAM,GAAC,GAAG,GAACD,MAAM,GAAC,IAAI,GAACA,MAAM,GAAC,KAAK;MACzC;IAEJ,KAAK,SAAS;MACVD,KAAK,CAACE,MAAM,GAAC,EAAE,GAACD,MAAM,GAAC,IAAI,GAACA,MAAM,GAAC,KAAK;MACxC;IAGJ;MACI;EAAM;EAGd,OAAOA,MAAM;AACjB,CAAC;AAID,MAAMK,gBAAgB,GAAGA,CAACC,aAAa,EAAEC,WAAW,KAAI;EACpD,IAAIP,MAAM,GAAG,KAAK;EAElB,KAAI,IAAIQ,IAAI,IAAID,WAAW,EAAC;IACxBE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBC,OAAO,CAACC,GAAG,CAACH,WAAW,CAACC,IAAI,CAAC,CAAC;EAClC;EAIA,OAAOR,MAAM;AACjB,CAAC;AAID,SACIH,UAAU,EACVQ,gBAAgB"},"metadata":{},"sourceType":"module"}