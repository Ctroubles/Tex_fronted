{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\TEX\\\\client\\\\src\\\\views\\\\Shopping\\\\ShoppingComponents\\\\PasarelaPago\\\\PasarelaPago.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import {  PayPalButtons } from \"@paypal/react-paypal-js\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { cleanShoppingCart } from \"../../../../redux/actions/actions\";\nimport style from \"./Pasarela.module.css\";\nimport urlBack from \"../../../../utils/deploy_back\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paypalboton = props => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  console.log();\n  const dispatch = useDispatch();\n  const pagoCarrito = useSelector(e => e.shoppingCart);\n  const [purchaseStatus, setPurchaseStatus] = useState(false);\n  const [purchaseError, setPurchaseError] = useState(null);\n  const price = useMemo(() => {\n    return pagoCarrito.reduce((total, currrent) => total + currrent.price * currrent.quantity, 0);\n  }, [pagoCarrito]);\n  const send = async () => {\n    const sendData = {\n      fromMail: \"compushoppf@gmail.com\",\n      toMail: user.email,\n      name: user.name\n    };\n    const mailer = await fetch(`${urlBack}/mailer`, {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(sendData)\n    });\n    console.log(mailer);\n  };\n  if (purchaseError) alert(purchaseError);else if (purchaseStatus) {\n    setPurchaseStatus(false);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Si no est\\xE1s logueado, inicia sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else if (!props.userId) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  } else if (!price) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tu carrito est\\xE1 vac\\xEDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  } else {\n    const manejadorSucces = async order => {\n      console.log(order);\n      const cleanCart = pagoCarrito.map(e => {\n        return {\n          _id: e._id,\n          name: e.name,\n          price: e.price,\n          description: e.desdescription,\n          description_2: e.desdescription_2,\n          description_3: e.desdescription_3,\n          description_4: e.desdescription_4,\n          quantity: e.quantity,\n          img: e.img\n        };\n      });\n      const directionDlivery = {\n        city: props.statusForm.current.city,\n        direction: props.statusForm.current.direction,\n        references: props.statusForm.current.references,\n        place: props.statusForm.current.options\n      };\n      const {\n        status\n      } = await axios.put(`${urlBack}/users/update/${props.userId}`, {\n        name: props.statusForm.current.name,\n        orders: {\n          fecha: Date.now(),\n          totalPrice: price,\n          directionDlivery,\n          contactPhone: props.statusForm.current.phone,\n          productos: cleanCart\n        }\n      }).catch(err => alert(\"El pago fue realizado, pero no pudimos completar tu compra. Contactanos para poder ayudare -> compushoppf@gmail.com\"));\n      if (status === 200) {\n        async function procesarStock(pagoCarrito) {\n          const peticiones = [];\n          pagoCarrito.forEach(e => {\n            peticiones.push(axios.put(`${urlBack}/components/${e._id}`, {\n              quantityStock: e.quantity * -1\n            }));\n          });\n          Promise.all(peticiones).then(respuestas => {\n            props.cerrarPasarela(2);\n            setPurchaseStatus(true);\n            dispatch(cleanShoppingCart());\n          }).catch(error => {\n            props.cerrarPasarela(0);\n            alert('Ocurrió un error al actualizar el stock');\n            console.log(error);\n          });\n        }\n        procesarStock(pagoCarrito);\n      } else {\n        props.cerrarPasarela(0);\n        alert(\"Pago realizado, pero no pudimos completar tu compra. Contactanos para poder ayudare -> compushoppf@gmail.com\");\n      }\n    };\n    const createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          description: \"Compra en CompuShop\",\n          amount: {\n            value: price\n          }\n        }]\n      });\n    };\n    const onApprove = async (data, actions) => {\n      send();\n      const order = await actions.order.capture();\n      manejadorSucces(order);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: style.buttonPaypalContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Paypalboton, \"NXpN9IbvKVCqGXNiQ7N9ZbH3kxw=\", false, function () {\n  return [useAuth0, useDispatch, useSelector];\n});\n_c = Paypalboton;\nexport default Paypalboton;\nvar _c;\n$RefreshReg$(_c, \"Paypalboton\");","map":{"version":3,"names":["React","useMemo","useState","useDispatch","useSelector","axios","useAuth0","cleanShoppingCart","style","urlBack","jsxDEV","_jsxDEV","Paypalboton","props","_s","user","isAuthenticated","console","log","dispatch","pagoCarrito","e","shoppingCart","purchaseStatus","setPurchaseStatus","purchaseError","setPurchaseError","price","reduce","total","currrent","quantity","send","sendData","fromMail","toMail","email","name","mailer","fetch","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","manejadorSucces","order","cleanCart","map","_id","description","desdescription","description_2","desdescription_2","description_3","desdescription_3","description_4","desdescription_4","img","directionDlivery","city","statusForm","current","direction","references","place","options","status","put","orders","fecha","Date","now","totalPrice","contactPhone","phone","productos","catch","err","procesarStock","peticiones","forEach","push","quantityStock","Promise","all","then","respuestas","cerrarPasarela","error","createOrder","data","actions","create","purchase_units","amount","value","onApprove","capture","id","buttonPaypalContainer","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/TEX/client/src/views/Shopping/ShoppingComponents/PasarelaPago/PasarelaPago.jsx"],"sourcesContent":["import React, { useMemo, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n// import {  PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport axios from \"axios\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { cleanShoppingCart } from \"../../../../redux/actions/actions\";\r\nimport style from \"./Pasarela.module.css\"\r\nimport urlBack from \"../../../../utils/deploy_back\";\r\n\r\n\r\nconst Paypalboton= (props)=>{\r\n    const { user, isAuthenticated } = useAuth0()\r\n    console.log();\r\n    \r\n    const dispatch = useDispatch()\r\n \r\n    const pagoCarrito= useSelector(e=>e.shoppingCart)\r\n\r\n\r\n    const [purchaseStatus, setPurchaseStatus ] = useState(false);\r\n    const [purchaseError, setPurchaseError ] = useState(null);\r\n\r\n\r\n    const price = useMemo(()=>{\r\n        return pagoCarrito.reduce((total,currrent)=>total+(currrent.price*currrent.quantity),0)\r\n    },[pagoCarrito])\r\n\r\n    const send = async() => {\r\n        const sendData = {\r\n            fromMail: \"compushoppf@gmail.com\",\r\n            toMail: user.email,\r\n            name: user.name\r\n        }\r\n        const mailer = await fetch(`${urlBack}/mailer`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendData)\r\n        })\r\n        console.log(mailer)\r\n    }\r\n\r\n    if (purchaseError) alert(purchaseError)\r\n    else if (purchaseStatus){ \r\n        setPurchaseStatus(false)\r\n    }\r\n    \r\n\r\n\r\n    if (!isAuthenticated) {\r\n        return(\r\n            <label>\r\n                <h1>loading...</h1>\r\n                <p>Si no estás logueado, inicia sesión</p>\r\n            </label>\r\n        )\r\n    }\r\n    else if(!props.userId){\r\n        return(\r\n            <label>\r\n                <h1>loading...</h1>\r\n            </label>\r\n        )\r\n    }else if(!price){\r\n        return(\r\n            <h1>Tu carrito está vacío</h1>\r\n        )\r\n    }\r\n    else{\r\n    \r\n        const manejadorSucces = async(order) =>{\r\n            console.log(order);\r\n    \r\n            const cleanCart = pagoCarrito.map((e)=>{\r\n                return{\r\n                    _id:e._id,\r\n                    name:e.name,\r\n                    price:e.price,\r\n                    description:e.desdescription,\r\n                    description_2:e.desdescription_2,\r\n                    description_3:e.desdescription_3,\r\n                    description_4:e.desdescription_4,\r\n                    quantity:e.quantity,\r\n                    img:e.img\r\n                }\r\n            })\r\n\r\n            const directionDlivery = {\r\n                    city:props.statusForm.current.city,\r\n                    direction:props.statusForm.current.direction,\r\n                    references:props.statusForm.current.references,\r\n                    place:props.statusForm.current.options,\r\n                }\r\n\r\n            const {status} = await axios.put(`${urlBack}/users/update/${props.userId}`,{name:props.statusForm.current.name,orders:{fecha:Date.now(),totalPrice:price,directionDlivery,contactPhone:props.statusForm.current.phone, productos:cleanCart,}, })\r\n            .catch((err)=>alert(\"El pago fue realizado, pero no pudimos completar tu compra. Contactanos para poder ayudare -> compushoppf@gmail.com\"))\r\n\r\n            if (status===200) {\r\n                async function procesarStock(pagoCarrito) {\r\n                    const peticiones = [];\r\n                  \r\n                    pagoCarrito.forEach((e) => {\r\n                        peticiones.push(axios.put(`${urlBack}/components/${e._id}`,{quantityStock:e.quantity*-1}))\r\n                    });\r\n                  \r\n                    Promise.all(peticiones)\r\n                    .then((respuestas) => {\r\n                      props.cerrarPasarela(2)\r\n                      setPurchaseStatus(true)\r\n                      dispatch(cleanShoppingCart())\r\n                    })\r\n                    .catch((error) => {\r\n                      props.cerrarPasarela(0)\r\n                      alert('Ocurrió un error al actualizar el stock');\r\n                      console.log(error);\r\n                    });\r\n                  }\r\n\r\n                  procesarStock(pagoCarrito)\r\n\r\n            }else{\r\n                props.cerrarPasarela(0)\r\n                alert(\"Pago realizado, pero no pudimos completar tu compra. Contactanos para poder ayudare -> compushoppf@gmail.com\")\r\n            }\r\n            \r\n        }\r\n    \r\n    \r\n        const createOrder = (data, actions) => {\r\n            return actions.order.create({\r\n                purchase_units:[\r\n                    {\r\n                        description:\"Compra en CompuShop\",\r\n                        amount: {\r\n                            value: price,\r\n                        }\r\n    \r\n                }\r\n    \r\n                ]\r\n            });\r\n             };\r\n    \r\n    \r\n        const onApprove = async(data, actions) => {\r\n            send()\r\n            const order = await actions.order.capture();\r\n            manejadorSucces(order)\r\n        };\r\n    \r\n    \r\n        return (\r\n            <div id={style.buttonPaypalContainer}>\r\n                {/* <PayPalButtons style={{ layout: \"horizontal\" }} \r\n                onClick={(data,action)=>{\r\n                    console.log(\"Estás apunto de efectuar la compra\")\r\n\r\n                    if (price) {\r\n                        return action.resolve();\r\n                    }else{\r\n                        return action.reject();\r\n                    }\r\n                }}\r\n                createOrder={(data, actions) => createOrder(data, actions)}\r\n                onApprove={(data, actions) =>onApprove(data, actions)}\r\n                onError={(err)=>setPurchaseError(err)}\r\n                /> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Paypalboton"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAO,OAAO;AAC/C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,WAAW,GAAGC,KAAK,IAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGV,QAAQ,EAAE;EAC5CW,OAAO,CAACC,GAAG,EAAE;EAEb,MAAMC,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAMiB,WAAW,GAAEhB,WAAW,CAACiB,CAAC,IAAEA,CAAC,CAACC,YAAY,CAAC;EAGjD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAE,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAE,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAGzD,MAAMyB,KAAK,GAAG1B,OAAO,CAAC,MAAI;IACtB,OAAOmB,WAAW,CAACQ,MAAM,CAAC,CAACC,KAAK,EAACC,QAAQ,KAAGD,KAAK,GAAEC,QAAQ,CAACH,KAAK,GAACG,QAAQ,CAACC,QAAS,EAAC,CAAC,CAAC;EAC3F,CAAC,EAAC,CAACX,WAAW,CAAC,CAAC;EAEhB,MAAMY,IAAI,GAAG,MAAAA,CAAA,KAAW;IACpB,MAAMC,QAAQ,GAAG;MACbC,QAAQ,EAAE,uBAAuB;MACjCC,MAAM,EAAEpB,IAAI,CAACqB,KAAK;MAClBC,IAAI,EAAEtB,IAAI,CAACsB;IACf,CAAC;IACD,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAE9B,OAAQ,SAAQ,EAAE;MAC5C+B,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;IACjC,CAAC,CAAC;IACFhB,OAAO,CAACC,GAAG,CAACoB,MAAM,CAAC;EACvB,CAAC;EAED,IAAIb,aAAa,EAAEoB,KAAK,CAACpB,aAAa,CAAC,MAClC,IAAIF,cAAc,EAAC;IACpBC,iBAAiB,CAAC,KAAK,CAAC;EAC5B;EAIA,IAAI,CAACR,eAAe,EAAE;IAClB,oBACIL,OAAA;MAAAmC,QAAA,gBACInC,OAAA;QAAAmC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBvC,OAAA;QAAAmC,QAAA,EAAG;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtC;EAEhB,CAAC,MACI,IAAG,CAACrC,KAAK,CAACsC,MAAM,EAAC;IAClB,oBACIxC,OAAA;MAAAmC,QAAA,eACInC,OAAA;QAAAmC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf;EAEhB,CAAC,MAAK,IAAG,CAACvB,KAAK,EAAC;IACZ,oBACIhB,OAAA;MAAAmC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAEtC,CAAC,MACG;IAEA,MAAME,eAAe,GAAG,MAAMC,KAAK,IAAI;MACnCpC,OAAO,CAACC,GAAG,CAACmC,KAAK,CAAC;MAElB,MAAMC,SAAS,GAAGlC,WAAW,CAACmC,GAAG,CAAElC,CAAC,IAAG;QACnC,OAAM;UACFmC,GAAG,EAACnC,CAAC,CAACmC,GAAG;UACTnB,IAAI,EAAChB,CAAC,CAACgB,IAAI;UACXV,KAAK,EAACN,CAAC,CAACM,KAAK;UACb8B,WAAW,EAACpC,CAAC,CAACqC,cAAc;UAC5BC,aAAa,EAACtC,CAAC,CAACuC,gBAAgB;UAChCC,aAAa,EAACxC,CAAC,CAACyC,gBAAgB;UAChCC,aAAa,EAAC1C,CAAC,CAAC2C,gBAAgB;UAChCjC,QAAQ,EAACV,CAAC,CAACU,QAAQ;UACnBkC,GAAG,EAAC5C,CAAC,CAAC4C;QACV,CAAC;MACL,CAAC,CAAC;MAEF,MAAMC,gBAAgB,GAAG;QACjBC,IAAI,EAACtD,KAAK,CAACuD,UAAU,CAACC,OAAO,CAACF,IAAI;QAClCG,SAAS,EAACzD,KAAK,CAACuD,UAAU,CAACC,OAAO,CAACC,SAAS;QAC5CC,UAAU,EAAC1D,KAAK,CAACuD,UAAU,CAACC,OAAO,CAACE,UAAU;QAC9CC,KAAK,EAAC3D,KAAK,CAACuD,UAAU,CAACC,OAAO,CAACI;MACnC,CAAC;MAEL,MAAM;QAACC;MAAM,CAAC,GAAG,MAAMrE,KAAK,CAACsE,GAAG,CAAE,GAAElE,OAAQ,iBAAgBI,KAAK,CAACsC,MAAO,EAAC,EAAC;QAACd,IAAI,EAACxB,KAAK,CAACuD,UAAU,CAACC,OAAO,CAAChC,IAAI;QAACuC,MAAM,EAAC;UAACC,KAAK,EAACC,IAAI,CAACC,GAAG,EAAE;UAACC,UAAU,EAACrD,KAAK;UAACuC,gBAAgB;UAACe,YAAY,EAACpE,KAAK,CAACuD,UAAU,CAACC,OAAO,CAACa,KAAK;UAAEC,SAAS,EAAC7B;QAAU;MAAG,CAAC,CAAC,CAC/O8B,KAAK,CAAEC,GAAG,IAAGxC,KAAK,CAAC,qHAAqH,CAAC,CAAC;MAE3I,IAAI6B,MAAM,KAAG,GAAG,EAAE;QACd,eAAeY,aAAaA,CAAClE,WAAW,EAAE;UACtC,MAAMmE,UAAU,GAAG,EAAE;UAErBnE,WAAW,CAACoE,OAAO,CAAEnE,CAAC,IAAK;YACvBkE,UAAU,CAACE,IAAI,CAACpF,KAAK,CAACsE,GAAG,CAAE,GAAElE,OAAQ,eAAcY,CAAC,CAACmC,GAAI,EAAC,EAAC;cAACkC,aAAa,EAACrE,CAAC,CAACU,QAAQ,GAAC,CAAC;YAAC,CAAC,CAAC,CAAC;UAC9F,CAAC,CAAC;UAEF4D,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC,CACtBM,IAAI,CAAEC,UAAU,IAAK;YACpBjF,KAAK,CAACkF,cAAc,CAAC,CAAC,CAAC;YACvBvE,iBAAiB,CAAC,IAAI,CAAC;YACvBL,QAAQ,CAACZ,iBAAiB,EAAE,CAAC;UAC/B,CAAC,CAAC,CACD6E,KAAK,CAAEY,KAAK,IAAK;YAChBnF,KAAK,CAACkF,cAAc,CAAC,CAAC,CAAC;YACvBlD,KAAK,CAAC,yCAAyC,CAAC;YAChD5B,OAAO,CAACC,GAAG,CAAC8E,KAAK,CAAC;UACpB,CAAC,CAAC;QACJ;QAEAV,aAAa,CAAClE,WAAW,CAAC;MAEhC,CAAC,MAAI;QACDP,KAAK,CAACkF,cAAc,CAAC,CAAC,CAAC;QACvBlD,KAAK,CAAC,8GAA8G,CAAC;MACzH;IAEJ,CAAC;IAGD,MAAMoD,WAAW,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;MACnC,OAAOA,OAAO,CAAC9C,KAAK,CAAC+C,MAAM,CAAC;QACxBC,cAAc,EAAC,CACX;UACI5C,WAAW,EAAC,qBAAqB;UACjC6C,MAAM,EAAE;YACJC,KAAK,EAAE5E;UACX;QAER,CAAC;MAGL,CAAC,CAAC;IACD,CAAC;IAGN,MAAM6E,SAAS,GAAG,MAAAA,CAAMN,IAAI,EAAEC,OAAO,KAAK;MACtCnE,IAAI,EAAE;MACN,MAAMqB,KAAK,GAAG,MAAM8C,OAAO,CAAC9C,KAAK,CAACoD,OAAO,EAAE;MAC3CrD,eAAe,CAACC,KAAK,CAAC;IAC1B,CAAC;IAGD,oBACI1C,OAAA;MAAK+F,EAAE,EAAElG,KAAK,CAACmG;IAAsB;MAAA5D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAe/B;EAEd;AAEJ,CAAC;AAAApC,EAAA,CAlKKF,WAAW;EAAA,QACqBN,QAAQ,EAGzBH,WAAW,EAETC,WAAW;AAAA;AAAAwG,EAAA,GAN5BhG,WAAW;AAoKjB,eAAeA,WAAW;AAAA,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}