{"ast":null,"code":"const validators = (target, value) => {\n  let result = false;\n  switch (target) {\n    case \"name\":\n      value.length < 45 ? result = true : result = false;\n      break;\n    case \"dni\":\n      if (!isNaN(value) && value.length < 9) result = true;else result = false;\n      break;\n    case \"phone\":\n      if (value.length < 15) {\n        if (value[0] === \"+\" || !isNaN(value[0])) {\n          const test = !isNaN(value.substring(1));\n          if (test) {\n            result = true;\n          }\n        }\n      }\n      if (value.length === 0) result = true;\n      break;\n    case \"references\":\n      value.length < 130 ? result = true : result = false;\n      break;\n    default:\n      break;\n  }\n  return result;\n};\nexport { validators };","map":{"version":3,"names":["validators","target","value","result","length","isNaN","test","substring"],"sources":["C:/Users/Usuario/Desktop/TEX/client/src/views/Shopping/helpers_shopping/helpers_shopping.js"],"sourcesContent":["const validators = (target,value) =>{\r\n    let result = false;\r\n\r\n    switch (target) {\r\n        case \"name\":\r\n            value.length<45?result=true:result=false;\r\n            break;\r\n        case \"dni\":\r\n                if (!isNaN(value) && value.length<9) result=true;\r\n                else result =false\r\n                break;     \r\n        case \"phone\":\r\n            if(value.length<15 ){\r\n                if(value[0]===\"+\"||!isNaN(value[0])){\r\n                    const test = !isNaN(value.substring(1))\r\n                    if (test) {\r\n                        result=true\r\n                    }\r\n                }\r\n            }\r\n            if (value.length===0)result=true\r\n            break;      \r\n        case \"references\":\r\n            value.length<130?result=true:result=false;\r\n\r\n            \r\n            break;            \r\n             \r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport{\r\n    validators,\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,MAAM,EAACC,KAAK,KAAI;EAChC,IAAIC,MAAM,GAAG,KAAK;EAElB,QAAQF,MAAM;IACV,KAAK,MAAM;MACPC,KAAK,CAACE,MAAM,GAAC,EAAE,GAACD,MAAM,GAAC,IAAI,GAACA,MAAM,GAAC,KAAK;MACxC;IACJ,KAAK,KAAK;MACF,IAAI,CAACE,KAAK,CAACH,KAAK,CAAC,IAAIA,KAAK,CAACE,MAAM,GAAC,CAAC,EAAED,MAAM,GAAC,IAAI,CAAC,KAC5CA,MAAM,GAAE,KAAK;MAClB;IACR,KAAK,OAAO;MACR,IAAGD,KAAK,CAACE,MAAM,GAAC,EAAE,EAAE;QAChB,IAAGF,KAAK,CAAC,CAAC,CAAC,KAAG,GAAG,IAAE,CAACG,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;UAChC,MAAMI,IAAI,GAAG,CAACD,KAAK,CAACH,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC,CAAC;UACvC,IAAID,IAAI,EAAE;YACNH,MAAM,GAAC,IAAI;UACf;QACJ;MACJ;MACA,IAAID,KAAK,CAACE,MAAM,KAAG,CAAC,EAACD,MAAM,GAAC,IAAI;MAChC;IACJ,KAAK,YAAY;MACbD,KAAK,CAACE,MAAM,GAAC,GAAG,GAACD,MAAM,GAAC,IAAI,GAACA,MAAM,GAAC,KAAK;MAGzC;IAGJ;MACI;EAAM;EAGd,OAAOA,MAAM;AACjB,CAAC;AAED,SACIH,UAAU"},"metadata":{},"sourceType":"module"}