{"ast":null,"code":"const validators = (target, value) => {\n  let result = false;\n  switch (target) {\n    case \"name\":\n      value.length < 45 ? result = true : result = false;\n      var regex = /^[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s]+$/;\n      if (regex.test(value)) result = true;else result = false;\n      break;\n    case \"dni\":\n      if (!isNaN(value) && value.length <= 8) result = true;else result = false;\n      break;\n    case \"phone\":\n      if (!isNaN(value) && value.length <= 9) result = true;else result = false;\n      if (value.length === 0) result = true;\n      break;\n    case \"email\":\n      const expresionRegular = /\\S+@\\S+\\.\\S+/;\n      if (expresionRegular.test(value)) result = true;else result = false;\n      break;\n    case \"instructions\":\n      value.length < 150 ? result = true : result = false;\n      break;\n    case \"address\":\n      value.length < 25 ? result = true : result = false;\n      break;\n    default:\n      break;\n  }\n  return result;\n};\nconst validatorsLevel2 = (setErrorsForm, currentForm) => {\n  const errors = {};\n  for (let prop in currentForm) {\n    switch (prop) {\n      case \"name\":\n        if (currentForm[prop].length < 45 || currentForm[prop] === \"\") errors[prop] = true;\n        break;\n      case \"dni\":\n        if (isNaN(currentForm[prop]) && !currentForm[prop].length === 8) errors[prop] = true;\n        break;\n      case \"phone\":\n        if (isNaN(currentForm[prop]) && !currentForm[prop].length === 9) errors[prop] = true;\n        break;\n      case \"email\":\n        const expresionRegular = /\\S+@\\S+\\.\\S+/;\n        if (!expresionRegular.test(currentForm[prop])) errors[prop] = true;\n        break;\n      case \"instructions\":\n        if (currentForm[prop].length > 150) errors[prop] = true;\n        break;\n      case \"address\":\n        if (currentForm.ciudad.toLowerCase() === \"trujillo\") {\n          if (currentForm[prop] === \"\") errors[prop] = true;\n        }\n        ;\n        break;\n      case \"departamento\":\n        if (currentForm[prop].toLowerCase() === \"selecciona tu departamento\" || currentForm[prop] === \"\") errors[prop] = true;\n        break;\n      case \"ciudad\":\n        if (currentForm[prop].toLowerCase() === \"selecciona tu ciudad\" || currentForm[prop] === \"\") errors[prop] = true;\n        break;\n      default:\n        break;\n    }\n  }\n  console.log(errors);\n};\nexport { validators, validatorsLevel2 };","map":{"version":3,"names":["validators","target","value","result","length","regex","test","isNaN","expresionRegular","validatorsLevel2","setErrorsForm","currentForm","errors","prop","ciudad","toLowerCase","console","log"],"sources":["C:/Users/Usuario/Desktop/TEX/client/src/views/Shopping/helpers_shopping/helpers_shopping.js"],"sourcesContent":["const validators = (target,value) =>{\r\n    let result = false;\r\n\r\n    switch (target) {\r\n        case \"name\":\r\n            value.length<45?result=true:result=false;\r\n            var regex = /^[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s]+$/;\r\n            if(regex.test(value))result = true\r\n            else result = false\r\n            break;\r\n        case \"dni\":\r\n                if (!isNaN(value) && value.length<=8) result=true;\r\n                else result =false\r\n                break;     \r\n        case \"phone\":\r\n                if (!isNaN(value) && value.length<=9) result=true;\r\n                else result =false\r\n            if (value.length===0)result=true\r\n            break;      \r\n        case \"email\":\r\n            const expresionRegular = /\\S+@\\S+\\.\\S+/;\r\n            if (expresionRegular.test(value)) result = true;\r\n            else result = false\r\n\r\n            break;          \r\n        case \"instructions\":\r\n            value.length<150?result=true:result=false;\r\n            break;            \r\n                     \r\n        case \"address\":\r\n            value.length<25?result=true:result=false;\r\n            break;            \r\n             \r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\nconst validatorsLevel2 = (setErrorsForm, currentForm) =>{\r\n    const errors= {};\r\n\r\n    for(let prop in currentForm){\r\n        switch (prop) {\r\n            case \"name\":\r\n                if(currentForm[prop].length<45 || currentForm[prop]===\"\")errors[prop]=true\r\n                break;\r\n            case \"dni\":\r\n                    if (isNaN(currentForm[prop]) && !currentForm[prop].length===8) errors[prop]=true;\r\n                    break;     \r\n            case \"phone\":\r\n                    if (isNaN(currentForm[prop]) && !currentForm[prop].length===9) errors[prop]=true;\r\n                break;      \r\n            case \"email\":\r\n                const expresionRegular = /\\S+@\\S+\\.\\S+/;\r\n                if (!expresionRegular.test(currentForm[prop])) errors[prop]=true;\r\n    \r\n                break;          \r\n            case \"instructions\":\r\n                if(currentForm[prop].length>150)errors[prop]=true;\r\n                break;            \r\n                         \r\n            case \"address\":\r\n                if(currentForm.ciudad.toLowerCase()===\"trujillo\"){\r\n                    if (currentForm[prop]===\"\")errors[prop]=true\r\n                };\r\n                break;\r\n            case \"departamento\":\r\n                if (currentForm[prop].toLowerCase() ===\"selecciona tu departamento\" || currentForm[prop]===\"\")errors[prop]=true       \r\n                 break;\r\n            case \"ciudad\":\r\n            if (currentForm[prop].toLowerCase() ===\"selecciona tu ciudad\" || currentForm[prop]===\"\")errors[prop]=true       \r\n                break;\r\n    \r\n            default:\r\n                break;\r\n         }\r\n    }\r\n\r\n    console.log(errors);\r\n};\r\n\r\n\r\n\r\nexport{\r\n    validators,\r\n    validatorsLevel2\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}